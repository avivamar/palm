# Minimal Railway Docker build - Focus on stability
FROM node:20-alpine

WORKDIR /app

# Install system dependencies
RUN apk add --no-cache libc6-compat git dumb-init curl

# Set environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Copy package files
COPY package*.json ./
COPY packages/admin/package.json ./packages/admin/
COPY packages/shared/package.json ./packages/shared/
COPY packages/shopify/package.json ./packages/shopify/
COPY packages/email/package.json ./packages/email/

# Configure npm and install dependencies (including devDependencies for build)
RUN npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set fetch-timeout 300000 && \
    npm ci --frozen-lockfile --no-audit --no-fund --prefer-offline --include=dev

# Copy source code
COPY . .

# Set placeholder environment variables for build time
# Note: These are placeholder values only for build-time validation
# Real values should be provided at runtime via environment variables
ARG SHOPIFY_STORE_DOMAIN="placeholder-store"
ARG SHOPIFY_ADMIN_ACCESS_TOKEN="shpat_placeholder_token_for_build_only"
ENV SHOPIFY_STORE_DOMAIN=${SHOPIFY_STORE_DOMAIN}
ENV SHOPIFY_ADMIN_ACCESS_TOKEN=${SHOPIFY_ADMIN_ACCESS_TOKEN}
ENV NEXT_PUBLIC_FIREBASE_API_KEY="placeholder_api_key"
ENV NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="placeholder.firebaseapp.com"
ENV NEXT_PUBLIC_FIREBASE_PROJECT_ID="placeholder-project"
ENV NEXT_PUBLIC_FIREBASE_APP_ID="1:123456789:web:placeholder"
ENV NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET="placeholder-bucket"
ENV NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="123456789"
ENV NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID="G-PLACEHOLDER"

# Build application in single step
RUN npm run build

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs && \
    chown -R nextjs:nodejs /app

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Start application
CMD ["dumb-init", "node", ".next/standalone/server.js"]