-- Generated by Gemini from Drizzle schema with added comments for clarity
-- This SQL script reflects the structure defined in `src/models/Schema.ts`
-- Last updated: 2025年7月14日

-- ENUM Types - These define allowed values for specific columns, ensuring data integrity.
CREATE TYPE "user_role" AS ENUM ('customer', 'admin', 'moderator');
CREATE TYPE "preorder_status" AS ENUM ('initiated', 'processing', 'completed', 'failed', 'refunded', 'cancelled');
CREATE TYPE "webhook_status" AS ENUM ('success', 'failed', 'pending', 'retry', 'expired');
CREATE TYPE "product_color" AS ENUM ('Honey Khaki', 'Sakura Pink', 'Healing Green', 'Moonlight Grey', 'Red');
CREATE TYPE "discount_type" AS ENUM ('percentage', 'fixed_amount');
CREATE TYPE "campaign_type" AS ENUM ('email', 'sms', 'push');
CREATE TYPE "campaign_status" AS ENUM ('draft', 'scheduled', 'active', 'paused', 'completed');
CREATE TYPE "referral_status" AS ENUM ('visited', 'purchased');
CREATE TYPE "share_platform" AS ENUM ('twitter', 'linkedin', 'whatsapp', 'telegram');

-- Table Schemas

-- Table: counter
-- Purpose: A simple counter table, likely for testing or basic metrics.
CREATE TABLE "counter" (
  "id" serial PRIMARY KEY,
  "count" integer DEFAULT 0 NOT NULL,
  "created_at" timestamp with time zone DEFAULT now() NOT NULL
);

-- Table: users
-- Purpose: Stores user account information. This is the central table for user data.
CREATE TABLE "users" (
  "id" text PRIMARY KEY, -- Platform-independent unique user ID (nanoid)
  "email" text NOT NULL UNIQUE, -- Core unified identifier, unique across all platforms
  "display_name" text,
  "photo_url" text,
  "role" user_role DEFAULT 'customer' NOT NULL, -- User's role in the system
  "phone" text,
  "country" text,
  "marketing_consent" boolean DEFAULT false, -- Indicates if the user agreed to receive marketing materials
  "email_verified" boolean DEFAULT false,
  "last_login_at" timestamp with time zone,

  -- Authentication platform IDs (for data synchronization)
  "firebase_uid" text UNIQUE, -- Firebase User UID
  "supabase_id" text UNIQUE, -- Supabase User ID (for association)
  "auth_source" text DEFAULT 'supabase', -- The primary source of authentication ('supabase' or 'firebase')

  -- Payment platform integration
  "stripe_customer_id" text UNIQUE, -- Stripe Customer ID

  -- E-commerce platform integration
  "shopify_customer_id" text UNIQUE, -- Shopify Customer ID

  -- Marketing platform integration
  "klaviyo_profile_id" text UNIQUE, -- Klaviyo Profile ID

  -- User behavior data
  "referral_code" text UNIQUE, -- User's unique referral code
  "referral_count" integer DEFAULT 0, -- How many users they have successfully referred

  -- Timestamps
  "created_at" timestamp with time zone DEFAULT now() NOT NULL,
  "updated_at" timestamp with time zone DEFAULT now()
);

-- Table: preorders
-- Purpose: Contains all information related to customer preorders.
CREATE TABLE "preorders" (
  "id" text PRIMARY KEY, -- Unique preorder identifier (nanoid)
  "user_id" text, -- Foreign key to the users table
  "email" text NOT NULL, -- Customer's email, denormalized for quick access
  "color" product_color NOT NULL, -- Selected product color
  "price_id" text NOT NULL, -- Stripe Price ID for the selected product
  "status" preorder_status DEFAULT 'initiated' NOT NULL, -- The current status of the preorder
  "session_id" text, -- Stripe Checkout session ID
  "payment_intent_id" text, -- Stripe Payment Intent ID
  "amount" decimal(10, 2) NOT NULL, -- Total amount paid
  "currency" text DEFAULT 'USD' NOT NULL,
  "preorder_number" text UNIQUE, -- Human-readable unique order number
  "locale" text DEFAULT 'en', -- Language used during checkout
  "customer_notes" text,
  "estimated_delivery" date,
  "shipping_address" jsonb, -- Full shipping address object
  "billing_address" jsonb, -- Full billing address object

  -- Flattened billing address fields for easier querying and reporting
  "billing_name" text,
  "billing_email" text,
  "billing_phone" text,
  "billing_address_line1" text,
  "billing_address_line2" text,
  "billing_city" text,
  "billing_state" text,
  "billing_country" text,
  "billing_postal_code" text,

  "discount_code" text, -- Applied discount code
  "discount_amount" decimal(10, 2) DEFAULT '0',
  "tax_amount" decimal(10, 2) DEFAULT '0',
  "shipping_cost" decimal(10, 2) DEFAULT '0',
  "tracking_number" text, -- Shipping tracking number
  "shipped_at" timestamp with time zone,
  "delivered_at" timestamp with time zone,
  "cancelled_at" timestamp with time zone,
  "cancellation_reason" text,
  "refunded_at" timestamp with time zone,
  "refund_amount" decimal(10, 2),
  "referrer_code" text, -- Referral code used for this preorder
  "share_nickname" text, -- Nickname used for sharing
  "klaviyo_event_sent_at" timestamp with time zone,

  -- Shopify integration fields
  "shopify_order_id" text,
  "shopify_order_number" text,
  "shopify_synced_at" timestamp with time zone,
  "shopify_fulfillment_status" text,

  -- Timestamps
  "updated_at" timestamp with time zone DEFAULT now(),
  "created_at" timestamp with time zone DEFAULT now(),
  FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE CASCADE
);

-- Table: webhook_logs
-- Purpose: Logs all incoming webhook events (e.g., from Stripe) for auditing, debugging, and reprocessing.
CREATE TABLE "webhook_logs" (
  "id" serial PRIMARY KEY,
  "event" text NOT NULL, -- The type of event (e.g., 'checkout.session.completed')
  "provider" text DEFAULT 'stripe' NOT NULL, -- The source of the webhook (e.g., 'stripe')
  "status" webhook_status NOT NULL, -- Processing status of the webhook
  "email" text, -- Email associated with the event, if available
  "error" text, -- Error message if processing failed
  "retry_count" integer DEFAULT 0,
  "max_retries" integer DEFAULT 3,
  "next_retry_at" timestamp with time zone,
  "processed_at" timestamp with time zone,
  "received_at" timestamp with time zone DEFAULT now(),
  "updated_at" timestamp with time zone DEFAULT now(),
  "created_at" timestamp with time zone DEFAULT now(),
  "preorder_id" text, -- Associated preorder ID
  "session_id" text,
  "payment_intent_id" text,
  "amount" decimal(10, 2),
  "currency" text,
  "color" product_color,
  "locale" text,
  "stripe_event_id" text UNIQUE, -- Stripe's unique event ID to ensure idempotency
  "klaviyo_event_sent" boolean DEFAULT false,
  "klaviyo_event_type" text,
  "klaviyo_event_sent_at" timestamp,
  "raw_data" jsonb, -- The full, raw webhook payload for analysis
  FOREIGN KEY ("preorder_id") REFERENCES "preorders"("id") ON DELETE SET NULL ON UPDATE CASCADE
);

-- Table: product_inventory
-- Purpose: Manages stock levels for each product color variant.
CREATE TABLE "product_inventory" (
  "id" serial PRIMARY KEY,
  "color" product_color UNIQUE NOT NULL, -- The product color variant
  "total_quantity" integer DEFAULT 0 NOT NULL, -- The total stock available
  "reserved_quantity" integer DEFAULT 0 NOT NULL, -- Stock reserved in active carts or pending orders
  "low_stock_threshold" integer DEFAULT 10, -- Threshold for low stock alerts
  "updated_at" timestamp with time zone DEFAULT now(),
  "created_at" timestamp with time zone DEFAULT now()
);

-- Table: discount_codes
-- Purpose: Stores all discount codes, their rules, and usage statistics.
CREATE TABLE "discount_codes" (
  "id" serial PRIMARY KEY,
  "code" text UNIQUE NOT NULL, -- The actual discount code string
  "type" discount_type NOT NULL, -- 'percentage' or 'fixed_amount'
  "value" decimal(10, 2) NOT NULL, -- The value of the discount
  "min_order_amount" decimal(10, 2) DEFAULT '0',
  "max_uses" integer, -- Maximum number of times the code can be used in total
  "used_count" integer DEFAULT 0, -- How many times the code has been used
  "valid_from" timestamp with time zone DEFAULT now(),
  "valid_until" timestamp with time zone,
  "is_active" boolean DEFAULT true,
  "description" text,
  "created_by" text, -- Foreign key to the admin user who created it
  "updated_at" timestamp with time zone DEFAULT now(),
  "created_at" timestamp with time zone DEFAULT now(),
  FOREIGN KEY ("created_by") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE CASCADE
);

-- Table: marketing_campaigns
-- Purpose: Defines and tracks marketing campaigns and their performance.
CREATE TABLE "marketing_campaigns" (
  "id" text PRIMARY KEY,
  "name" text NOT NULL,
  "type" campaign_type NOT NULL, -- 'email', 'sms', or 'push'
  "status" campaign_status DEFAULT 'draft',
  "target_audience" jsonb, -- Defines the user segment for the campaign
  "content" jsonb, -- The content of the campaign message
  "scheduled_at" timestamp with time zone,
  "started_at" timestamp with time zone,
  "completed_at" timestamp with time zone,
  "total_recipients" integer DEFAULT 0,
  "successful_sends" integer DEFAULT 0,
  "failed_sends" integer DEFAULT 0,
  "open_rate" decimal(5, 4),
  "click_rate" decimal(5, 4),
  "conversion_rate" decimal(5, 4),
  "created_by" text,
  "updated_at" timestamp with time zone DEFAULT now(),
  "created_at" timestamp with time zone DEFAULT now(),
  FOREIGN KEY ("created_by") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE CASCADE
);

-- Table: referrals
-- Purpose: Tracks user referrals to reward referrers and analyze acquisition channels.
CREATE TABLE "referrals" (
  "id" text PRIMARY KEY,
  "referrer_code" text NOT NULL, -- The code of the user who made the referral
  "referee_email" text NOT NULL, -- The email of the user who was referred
  "preorder_id" text, -- The preorder made by the referred user
  "status" referral_status DEFAULT 'visited', -- 'visited' or 'purchased'
  "reward_sent" boolean DEFAULT false, -- Indicates if the referrer has been rewarded
  "created_at" timestamp with time zone DEFAULT now(),
  "updated_at" timestamp with time zone DEFAULT now(),
  FOREIGN KEY ("preorder_id") REFERENCES "preorders"("id") ON DELETE SET NULL ON UPDATE CASCADE
);

-- Table: share_activities
-- Purpose: Logs user sharing activities for analytics.
CREATE TABLE "share_activities" (
  "id" text PRIMARY KEY,
  "referral_code" text NOT NULL, -- The user's referral code that was shared
  "platform" share_platform NOT NULL, -- The platform it was shared on (e.g., 'twitter')
  "share_type" text DEFAULT 'link',
  "created_at" timestamp with time zone DEFAULT now()
);