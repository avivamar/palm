{
  "name": "deepknows-official",
  "version": "1.0.0",
  "private": true,
  "author": "Deepknows",
  "workspaces": [
    "packages/*"
  ],
  "engines": {
    "node": ">=20.x"
  },
  "scripts": {
    "dev:next": "NODE_OPTIONS='--inspect' next dev",
    "dev": "npx dotenv-cli -e .env -- next dev",
    "build": "NEXT_TELEMETRY_DISABLED=1 next build --no-lint",
    "build:vercel": "NEXT_TELEMETRY_DISABLED=1 next build --no-lint",
    "build:standalone": "RAILWAY_ENVIRONMENT= next build --no-lint",
    "build:railway": "bash scripts/railway-safe-build.sh",
    "clean:cache": "rm -rf node_modules/.cache .next/cache",
    "start": "./scripts/railway-start.sh",
    "build-stats": "cross-env ANALYZE=true npm run build",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "check-types": "tsc --noEmit --pretty",
    "admin:dev": "./scripts/admin-dev.sh dev",
    "admin:check": "./scripts/admin-dev.sh check-types",
    "admin:validate": "./scripts/admin-dev.sh validate",
    "admin:build-check": "./scripts/admin-dev.sh build-check",
    "test": "vitest run",
    "test:e2e": "playwright test",
    "commit": "cz",
    "db:generate": "NODE_TLS_REJECT_UNAUTHORIZED=0 drizzle-kit generate",
    "db:migrate": "NODE_TLS_REJECT_UNAUTHORIZED=0 dotenv -c production -- drizzle-kit migrate",
    "db:studio": "NODE_TLS_REJECT_UNAUTHORIZED=0 dotenv -c production -- drizzle-kit studio",
    "db:push": "NODE_TLS_REJECT_UNAUTHORIZED=0 dotenv -c production -- drizzle-kit push",
    "sync-colors": "node scripts/sync-colors.js",
    "colors:validate": "node scripts/sync-colors.js --validate-only",
    "stripe:sync": "NODE_TLS_REJECT_UNAUTHORIZED=0 npx tsx scripts/stripe-sync.ts",
    "stripe:validate": "NODE_TLS_REJECT_UNAUTHORIZED=0 npx tsx scripts/stripe-sync.ts --validate-only",
    "stripe:check": "node scripts/check-stripe.js",
    "supabase:check": "node scripts/check-supabase.js",
    "debug:railway": "./scripts/debug-railway-env.sh",
    "check-env": "node scripts/check-env.js",
    "check-env:local": "dotenv -e .env.local -- node scripts/check-env.js",
    "verify-fixes": "node scripts/verify-fixes.js",
    "validate-locales": "node scripts/validate-locales.js",
    "check-status": "./scripts/check-status.sh",
    "test-db-fix": "node scripts/test-db-fix.js",
    "test-build": "node scripts/test-build.js",
    "storybook": "storybook dev -p 6006",
    "storybook:build": "storybook build",
    "storybook:serve": "http-server storybook-static --port 6006 --silent",
    "serve-storybook": "run-s storybook:*",
    "test-storybook:ci": "start-server-and-test serve-storybook http://127.0.0.1:6006 test-storybook",
    "prepare": "node -e \"console.log('Prepare script executed')\"",
    "postinstall": "npm list @rolitt/admin || true",
    "setup": "npm run prisma:generate",
    "dev:shadcn-ui": "npx shadcn-ui@latest add",
    "preview": "CLOUDFLARE_BUILD=true npx @opennextjs/cloudflare build && ./scripts/optimize-cloudflare-build.sh && wrangler pages dev .open-next/static --compatibility-date=2024-01-01 --port=3000",
    "deploy": "CLOUDFLARE_BUILD=true npx @opennextjs/cloudflare build && ./scripts/optimize-cloudflare-build.sh && npx @opennextjs/cloudflare deploy",
    "deploy:cloudflare": "npm run deploy",
    "cf-typegen": "wrangler types --env-interface CloudflareEnv cloudflare-env.d.ts",
    "ci:install": "npm ci",
    "ci:build": "npm run build",
    "ci:test": "npm run test && npm run test:e2e",
    "ci:lint": "npm run lint && npm run check-types",
    "ci:validate": "npm run colors:validate && npm run validate-locales",
    "ci:security": "npm audit --audit-level=high",
    "deploy:railway": "railway up",
    "deploy:vercel": "vercel --prod",
    "health:check": "curl -f $APP_URL/api/webhook/health || echo 'Health check failed'",
    "logs:railway": "railway logs --tail",
    "logs:vercel": "vercel logs",
    "rollback:railway": "railway rollback",
    "monitor:lighthouse": "lighthouse $APP_URL --output=json --output-path=./lighthouse-report.json",
    "setup:ci": "npm run ci:install && npm run ci:validate && npm run ci:build",
    "email:test": "npx tsx scripts/test-email-templates.ts",
    "email:test:full": "npx tsx scripts/test-email-templates.ts full",
    "email:test:performance": "npx tsx scripts/test-email-templates.ts performance",
    "email:test:security": "npx tsx scripts/test-email-templates.ts security",
    "email:setup": "npx tsx scripts/setup-supabase-email-templates.ts",
    "email:generate": "npx tsx scripts/setup-supabase-email-templates.ts --generate-only",
    "email:validate": "npx tsx scripts/test-email-templates.ts basic",
    "production:troubleshoot": "node scripts/production-troubleshoot.js",
    "production:init-db": "psql $DATABASE_URL -f scripts/init-production-database.sql",
    "ai:dev": "npm run dev --workspace=@rolitt/ai-core",
    "ai:build": "npm run build --workspace=@rolitt/ai-core",
    "ai:test": "npm run test --workspace=@rolitt/ai-core",
    "ai:validate": "npm run type-check --workspace=@rolitt/ai-core && npm run lint --workspace=@rolitt/ai-core",
    "ai:test-multi": "npx tsx scripts/test-multi-endpoint.ts",
    "ai:health": "curl -X POST http://localhost:3000/api/ai/health || echo 'AI health check failed'",
    "payments:dev": "npm run dev --workspace=@rolitt/payments",
    "payments:build": "npm run build --workspace=@rolitt/payments",
    "payments:test": "npm run test --workspace=@rolitt/payments",
    "payments:validate": "npm run validate --workspace=@rolitt/payments",
    "migrate:payments": "npm run migrate --workspace=@rolitt/payments",
    "migrate:list": "npm run migrate:list --workspace=@rolitt/payments",
    "migrate:step": "npm run migrate:step --workspace=@rolitt/payments",
    "migrate:full": "npm run migrate:full --workspace=@rolitt/payments",
    "migrate:dry-run": "npm run migrate:dry-run --workspace=@rolitt/payments",
    "backup:database": "npx tsx scripts/database-export.ts",
    "backup:database:full": "BACKUP_DIR=./backups npx tsx scripts/database-export.ts",
    "backup:supabase": "npx tsx scripts/supabase-backup.ts",
    "backup:restore": "npx tsx scripts/supabase-restore.ts",
    "backup:check": "ls -la ./backups/ && echo 'Backup files listed above'"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.56.0",
    "@electric-sql/pglite": "^0.2.17",
    "@formatjs/intl-localematcher": "^0.6.1",
    "@google/generative-ai": "^0.24.1",
    "@hookform/resolvers": "^5.1.1",
    "@logtail/pino": "^0.5.2",
    "@next/third-parties": "15.2.4",
    "@notionhq/client": "^3.1.3",
    "@opentelemetry/redis-common": "^0.38.0",
    "@opentelemetry/sql-common": "^0.41.0",
    "@prisma/client": "^6.10.1",
    "@radix-ui/react-accordion": "^1.2.3",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.6",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.6",
    "@rolitt/admin": "file:packages/admin",
    "@rolitt/ai-core": "file:packages/ai-core",
    "@rolitt/email": "file:packages/email",
    "@rolitt/image-upload": "file:packages/image-upload",
    "@rolitt/payments": "file:packages/payments",
    "@rolitt/referral": "file:packages/referral",
    "@rolitt/shared": "file:packages/shared",
    "@rolitt/shopify": "file:packages/shopify",
    "@shopify/admin-api-client": "^1.1.0",
    "@shopify/shopify-api": "^11.13.0",
    "@stripe/react-stripe-js": "^3.7.0",
    "@stripe/stripe-js": "^7.3.1",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.50.5",
    "@t3-oss/env-nextjs": "^0.12.0",
    "@tailwindcss/forms": "^0.5.10",
    "@types/ioredis": "^4.28.10",
    "@types/uuid": "^10.0.0",
    "@uidotdev/usehooks": "^2.4.1",
    "@upstash/redis": "^1.35.1",
    "@vercel/analytics": "^1.5.0",
    "@vercel/blob": "^1.1.1",
    "@vercel/speed-insights": "^1.2.0",
    "autoprefixer": "^10.4.20",
    "clarity-js": "^0.8.11",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "color": "^5.0.0",
    "dotenv": "^16.4.5",
    "drizzle-orm": "^0.40.0",
    "firebase": "^11.9.1",
    "forwarded-parse": "^2.1.2",
    "framer-motion": "^12.5.0",
    "graphql": "^16.10.0",
    "graphql-request": "^7.1.2",
    "gray-matter": "^4.0.3",
    "ioredis": "^5.6.1",
    "isomorphic-dompurify": "^2.26.0",
    "klaviyo-api": "^18.0.0",
    "libphonenumber-js": "^1.12.9",
    "lucide-react": "^0.482.0",
    "nanoid": "^5.1.5",
    "next": "^15.2.0",
    "next-intl": "^4.3.4",
    "next-themes": "^0.4.6",
    "notion-to-md": "^3.1.9",
    "pg": "^8.16.2",
    "pino": "^9.6.0",
    "pino-pretty": "^13.0.0",
    "postcss": "^8.5.3",
    "postgres": "^3.4.7",
    "prisma": "^6.10.1",
    "puppeteer": "^23.10.4",
    "react": "19.0.0",
    "react-confetti": "^6.4.0",
    "react-dom": "19.0.0",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.57.0",
    "react-markdown": "^10.1.0",
    "react-syntax-highlighter": "^15.6.1",
    "recharts": "^2.15.0",
    "redis": "^4.7.0",
    "rehype-raw": "^7.0.0",
    "remark": "^15.0.1",
    "remark-gfm": "^4.0.1",
    "remark-html": "^16.0.1",
    "resend": "^4.1.2",
    "sonner": "^2.0.5",
    "stack-trace": "^1.0.0-pre2",
    "stripe": "^18.2.1",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.4.0",
    "tailwindcss-animate": "^1.0.7",
    "uuid": "^11.1.0",
    "zod": "^3.25.58",
    "zustand": "^5.0.6"
  },
  "devDependencies": {
    "@antfu/eslint-config": "4.15.0",
    "@commitlint/cli": "^19.7.1",
    "@commitlint/config-conventional": "^19.7.1",
    "@commitlint/cz-commitlint": "^19.6.1",
    "@commitlint/types": "^19.8.0",
    "@eslint-react/eslint-plugin": "^1.28.0",
    "@faker-js/faker": "^9.5.0",
    "@next/bundle-analyzer": "^15.4.3",
    "@next/eslint-plugin-next": "15.2.0",
    "@opennextjs/cloudflare": "1.2.1",
    "@percy/cli": "1.30.7",
    "@percy/playwright": "^1.0.7",
    "@playwright/test": "^1.54.1",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@storybook/addon-essentials": "^8.6.2",
    "@storybook/addon-interactions": "^8.6.2",
    "@storybook/addon-links": "^8.6.2",
    "@storybook/addon-onboarding": "^8.6.2",
    "@storybook/blocks": "^8.6.2",
    "@storybook/nextjs": "^8.6.2",
    "@storybook/react": "^8.6.2",
    "@storybook/test": "^8.6.2",
    "@storybook/test-runner": "^0.21.3",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.2.0",
    "@types/node": "^22.13.5",
    "@types/pg": "^8.11.11",
    "@types/puppeteer": "^5.4.7",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.1.6",
    "@types/react-syntax-highlighter": "^15.5.13",
    "@types/recharts": "^2.0.0",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/coverage-v8": "^3.0.7",
    "@vitest/expect": "^3.0.7",
    "checkly": "^4.19.1",
    "commitizen": "^4.3.1",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^8.0.0",
    "drizzle-kit": "^0.31.4",
    "eslint": "^9.30.1",
    "eslint-plugin-format": "^1.0.1",
    "eslint-plugin-jest-dom": "^5.5.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-playwright": "^2.2.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "eslint-plugin-testing-library": "^7.1.1",
    "http-server": "^14.1.1",
    "husky": "^9.1.7",
    "ignore-loader": "^0.1.2",
    "jsdom": "^26.0.0",
    "lint-staged": "^15.4.3",
    "npm-run-all": "^4.1.5",
    "postcss-load-config": "^6.0.1",
    "semantic-release": "^24.2.3",
    "start-server-and-test": "^2.0.10",
    "storybook": "^8.6.2",
    "tsx": "^4.19.2",
    "typescript": "5.7.3",
    "vite": "^6.2.2",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.0.7",
    "vitest-fail-on-console": "^0.7.1",
    "wrangler": "^4.19.2"
  },
  "config": {
    "commitizen": {
      "path": "@commitlint/cz-commitlint"
    }
  },
  "release": {
    "branches": [
      "main"
    ],
    "plugins": [
      [
        "@semantic-release/commit-analyzer",
        {
          "preset": "conventionalcommits"
        }
      ],
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      [
        "@semantic-release/npm",
        {
          "npmPublish": false
        }
      ],
      "@semantic-release/git",
      "@semantic-release/github"
    ]
  }
}
